{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Components/Modal.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","undefined","extensionId","setExtensionId","useEffect","window","addEventListener","event","source","data","type","Provider","value","getExtensionId","postMessage","Modal","App","ReactDOM","render","document","getElementById"],"mappings":"kOAOeA,EANW,WACxB,MAAO,CACLC,eAAiB,CAAEC,EAAG,IAAKC,EAAG,OCArBC,EAAeC,IAAMC,cAAc,IAiCjCC,EA/BO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfP,EAAmBD,IAAnBC,eAD8B,EAEAQ,wBAASC,GAFT,mBAE/BC,EAF+B,KAElBC,EAFkB,KAkBtC,OAVAC,qBAAU,WAERC,OAAOC,iBAAiB,WAAW,SAASC,GACtCA,EAAMC,SAAWH,QACjBE,EAAME,KAAKC,MAA6B,wBAApBH,EAAME,KAAKC,MACjCP,EAAeI,EAAME,KAAKP,kBAG7B,IAGD,kBAACP,EAAagB,SAAd,CACEC,MAAO,CACLV,cACAW,eAlBN,WACER,OAAOS,YAAY,CAAEJ,KAAM,oBAAsB,MAkB7ClB,mBAGDO,ICtBQgB,EAJD,WACV,OAAO,4CCUIC,MARf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCPNC,IAASC,OACP,oCACE,kBAAC,EAAD,OACGC,SAASC,eAAe,kB","file":"static/js/main.fa0104ad.chunk.js","sourcesContent":["\r\nconst useWindowPosition = () => {\r\n  return {\r\n    windowPosition:  { x: 100, y: 100 },\r\n  }\r\n};\r\n\r\nexport default useWindowPosition;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useWindowPosition from '../Hooks/useWindowPosition';\r\n\r\nexport const ModalContext = React.createContext({});\r\n\r\nconst ModalProvider = ({ children }) => {\r\n  const { windowPosition } = useWindowPosition();\r\n  const [extensionId, setExtensionId] = useState(undefined);\r\n\r\n  function getExtensionId() {\r\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Set up event listeners from Content script\r\n    window.addEventListener(\"message\", function(event) {\r\n      if (event.source !== window) return;\r\n      if (event.data.type && (event.data.type === \"EXTENSION_ID_RESULT\")) {\r\n        setExtensionId(event.data.extensionId);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        extensionId,\r\n        getExtensionId,\r\n        windowPosition,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import React from \"react\";\r\nimport { X } from \"react-feather\";\r\nimport Draggable from \"react-draggable\";\r\nimport { ModalContext } from \"../Contexts/ModalProvider\";\r\n\r\nconst Modal = () => {\r\n    return <h1>Hello world</h1>;\r\n};\r\n\r\nexport default Modal;\r\n\r\n{\r\n    /* <ModalContext.Consumer>\r\n            {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId }) => (\r\n                <Draggable\r\n                    handle=\".modal-handle\"\r\n                    defaultPosition={{ x: windowPosition.x, y: windowPosition.y }}\r\n                    position={\r\n                        hasDraggedWindowPosition\r\n                            ? { x: windowPosition.x, y: windowPosition.y }\r\n                            : null\r\n                    }\r\n                >\r\n                    <div\r\n                        id=\"modal\"\r\n                        className=\"modal-window\"\r\n                        style={{\r\n                            transform: windowPosition,\r\n                        }}\r\n                    >\r\n                        <div className=\"modal-window-inner-border\">\r\n                            <>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"modal-handle\">\r\n                                        <div className=\"modal-close-button\">\r\n                                            <X color=\"#5d6484\" size=\"14\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-content\">\r\n                                        <h3>{extensionId}</h3>\r\n                                        <button onClick={getExtensionId} className=\"modal-button\">\r\n                                            {window.screen.width}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        </div>\r\n                    </div>\r\n                </Draggable>\r\n            )}\r\n        </ModalContext.Consumer> */\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Modal from './Components/Modal';\r\nimport ModalProvider from './Contexts/ModalProvider';\r\n\r\n/**\r\n * @return {null}\r\n */\r\nfunction App() {\r\n  return (\r\n    <ModalProvider>\r\n      <Modal />\r\n    </ModalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>, document.getElementById('modal-window'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}